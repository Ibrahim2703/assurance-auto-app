name: Build Android APK

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'  # Changed from 17 to 11 for better compatibility
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          python3-pip \
          python3-setuptools \
          python3-dev \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0 \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.33
        pip install kivymd
        pip install kivy[base]
    
    - name: Create buildozer.spec
      run: |
        cat > buildozer.spec << 'EOF'
        [app]
        title = Assurance Auto
        package.name = assuranceauto
        package.domain = com.assurance.auto
        
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas,json
        
        version = 1.0
        
        requirements = python3,kivy,kivymd,pillow,requests
        
        [buildozer]
        log_level = 2
        
        [app]
        presplash.filename = %(source.dir)s/presplash.png
        icon.filename = %(source.dir)s/icon.png
        
        orientation = portrait
        osx.python_version = 3
        osx.kivy_version = 1.9.1
        fullscreen = 0
        android.minapi = 21
        android.api = 33
        android.ndk = 25b
        android.sdk = 33
        android.accept_sdk_license = True
        android.arch = arm64-v8a
        
        android.permissions = INTERNET,ACCESS_NETWORK_STATE,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE
        
        # Add JVM options to handle JAXB
        android.gradle_dependencies = com.sun.xml.bind:jaxb-core:2.3.0.1, com.sun.xml.bind:jaxb-impl:2.3.0.1, javax.xml.bind:jaxb-api:2.3.0
        android.add_jars = 
        
        [buildozer]
        log_level = 2
        warn_on_root = 1
        EOF
    
    - name: Create default icon and presplash
      run: |
        # CrÃ©er une icÃ´ne simple si elle n'existe pas
        if [ ! -f "icon.png" ]; then
          python3 -c "
        from PIL import Image, ImageDraw, ImageFont
        import os
        
        # CrÃ©er une icÃ´ne simple
        size = (512, 512)
        img = Image.new('RGBA', size, (33, 150, 243, 255))  # Bleu Material
        draw = ImageDraw.Draw(img)
        
        # Dessiner un cercle
        margin = 50
        draw.ellipse([margin, margin, size[0]-margin, size[1]-margin], fill=(255, 255, 255, 255))
        
        # Ajouter du texte
        try:
            font = ImageFont.truetype('/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', 60)
        except:
            font = ImageFont.load_default()
        
        text = 'ðŸš—'
        bbox = draw.textbbox((0, 0), text, font=font)
        text_width = bbox[2] - bbox[0]
        text_height = bbox[3] - bbox[1]
        x = (size[0] - text_width) // 2
        y = (size[1] - text_height) // 2
        draw.text((x, y), text, fill=(33, 150, 243, 255), font=font)
        
        img.save('icon.png')
        img.resize((512, 512)).save('presplash.png')
        print('IcÃ´nes crÃ©Ã©es avec succÃ¨s')
        "
        fi
    
    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}
    
    - name: Cache Buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}-${{ hashFiles('main.py') }}
        restore-keys: |
          buildozer-${{ hashFiles('buildozer.spec') }}-
          buildozer-
    
    - name: Build APK with Buildozer
      run: |
        # Configuration des variables d'environnement
        export ANDROID_HOME=$ANDROID_SDK_ROOT
        export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT
        export ANDROID_NDK_HOME=$ANDROID_NDK_LATEST_HOME
        export PATH=$PATH:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools
        
        # Add JVM options to handle missing JAXB
        export GRADLE_OPTS="-Dorg.gradle.jvmargs=--add-modules=java.xml.bind"
        
        # Accepter les licences
        yes | $ANDROID_SDK_ROOT/tools/bin/sdkmanager --licenses || true
        
        # Build APK
        buildozer android debug
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: apk-debug
        path: bin/*.apk
        retention-days: 30
    
    - name: Upload APK to Release (if tag)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}